<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>React</title>
		<description>A JavaScript library for building user interfaces</description>
		<link>http://facebook.github.io/react</link>
		<atom:link href="http://facebook.github.io/react/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Community Round-up #1</title>
				<description>&lt;p&gt;React was open sourced two weeks ago and it&amp;#39;s time for a little round-up of what has been going on.&lt;/p&gt;

&lt;h2&gt;Khan Academy Question Editor&lt;/h2&gt;

&lt;p&gt;It looks like &lt;a href=&quot;http://benalpert.com/&quot;&gt;Ben Alpert&lt;/a&gt; is the first person outside of Facebook and Instagram to push React code to production. We are very grateful for his contributions in form of pull requests, bug reports and presence on IRC (&lt;a href=&quot;irc://chat.freenode.net/reactjs&quot;&gt;#reactjs on Freenode&lt;/a&gt;). Ben wrote about his experience using React:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I just rewrote a 2000-line project in React and have now made a handful of pull requests to React. Everything about React I&amp;#39;ve seen so far seems really well thought-out and I&amp;#39;m proud to be the first non-FB/IG production user of React.&lt;/p&gt;

&lt;p&gt;The project that I rewrote in React (and am continuing to improve) is the Khan Academy question editor which content creators can use to enter questions and hints that will be presented to students:
&lt;figure&gt;&lt;a href=&quot;http://benalpert.com/2013/06/09/using-react-to-speed-up-khan-academy.html&quot;&gt;&lt;img src=&quot;/react/img/blog/khan-academy-editor.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://benalpert.com/2013/06/09/using-react-to-speed-up-khan-academy.html&quot;&gt;Read the full post...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Pimp my Backbone.View (by replacing it with React)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mayflower.de/&quot;&gt;Paul Seiffert&lt;/a&gt; wrote a blog post that explains how to integrate React into Backbone applications.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React has some interesting concepts for JavaScript view objects that can be used to eliminate this one big problem I have with Backbone.js.&lt;/p&gt;

&lt;p&gt;As in most MVC implementations (although React is probably just a VC implementation), a view is one portion of the screen that is managed by a controlling object. This object is responsible for deciding when to re-render the view and how to react to user input. With React, these view-controllers objects are called components. A component knows how to render its view and how to handle to the user&amp;#39;s interaction with it.&lt;/p&gt;

&lt;p&gt;The interesting thing is that React is figuring out by itself when to re-render a view and how to do this in the most efficient way.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mayflower.de/3937-Backbone-React.html&quot;&gt;Read the full post...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Using facebook&amp;#39;s React with require.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.xenji.com/&quot;&gt;Mario Mueller&lt;/a&gt; wrote a menu component in React and was able to easily integrate it with require.js, EventEmitter2 and bower.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I recently stumbled upon facebook&amp;#39;s React library, which is a Javascript library for building reusable frontend components. Even if this lib is only at version 0.3.x it behaves very stable, it is fast and is fun to code. I&amp;#39;m a big fan of require.js, so I tried to use React within the require.js eco system. It was not as hard as expected and here are some examples and some thoughts about it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.xenji.com/2013/06/facebooks-react-require-js.html&quot;&gt;Read the full post...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Origins of React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.petehunt.net/blog/&quot;&gt;Pete Hunt&lt;/a&gt; explained what differentiates React from other JavaScript libraries in &lt;a href=&quot;http://facebook.github.io/react/blog/2013/06/05/why-react.html&quot;&gt;a previous blog post&lt;/a&gt;. &lt;a href=&quot;http://leebyron.com/&quot;&gt;Lee Byron&lt;/a&gt; gives another perspective on Quora:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React isn&amp;#39;t quite like any other popular Javascript libraries, and it solves a very specific problem: complex UI rendering. It&amp;#39;s also intended to be used along side many other popular libraries. For example, React works well with Backbone.js, amongst many others.&lt;/p&gt;

&lt;p&gt;React was born out of frustrations with the common pattern of writing two-way data bindings in complex MVC apps. React is an implementation of one-way data bindings.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.quora.com/React-JS-Library/How-is-Facebooks-React-JavaScript-library/answer/Lee-Byron?srid=3DcX&quot;&gt;Read the full post...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>2013-06-12T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2013/06/12/community-roundup.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2013/06/12/community-roundup.html</guid>
			</item>
		
			<item>
				<title>Why did we build React?</title>
				<description>&lt;p&gt;There are a lot of JavaScript MVC frameworks out there. Why did we build React
and why would you want to use it?&lt;/p&gt;

&lt;h2&gt;React isn&amp;#39;t an MVC framework.&lt;/h2&gt;

&lt;p&gt;React is a library for building composable user interfaces. It encourages
the creation of reusable UI components which present data that changes over
time.&lt;/p&gt;

&lt;h2&gt;React doesn&amp;#39;t use templates.&lt;/h2&gt;

&lt;p&gt;Traditionally, web application UIs are built using templates or HTML directives.
These templates dictate the full set of abstractions that you are allowed to use
to build your UI.&lt;/p&gt;

&lt;p&gt;React approaches building user interfaces differently by breaking them into
&lt;strong&gt;components&lt;/strong&gt;. This means React uses JavaScript to generate markup, which we
see as an advantage over templates for a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JavaScript is a flexible, powerful programming language&lt;/strong&gt; with the ability
to build abstractions. This is incredibly important in large applications.&lt;/li&gt;
&lt;li&gt;By unifying your markup with its corresponding view logic, React can actually
make views &lt;strong&gt;easier to extend and maintain&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;By baking an understanding of markup and content into JavaScript, there&amp;#39;s
&lt;strong&gt;no manual string concatenation&lt;/strong&gt; and therefore less surface area for XSS
vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;ve also created &lt;a href=&quot;http://facebook.github.io/react/docs/syntax.html&quot;&gt;JSX&lt;/a&gt;, an optional
syntax extension, in case you prefer the readability of HTML to raw JavaScript.&lt;/p&gt;

&lt;h2&gt;Reactive updates are dead simple.&lt;/h2&gt;

&lt;p&gt;React really shines when your data changes over time.&lt;/p&gt;

&lt;p&gt;In a traditional JavaScript application, you need to look at what data changed
and imperatively make changes to the DOM to keep it up-to-date. Even AngularJS,
which provides a declarative interface via directives and data binding &lt;a href=&quot;http://docs.angularjs.org/guide/directive#reasonsbehindthecompilelinkseparation&quot;&gt;requires
a linking function to manually update DOM nodes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React takes a different approach.&lt;/p&gt;

&lt;p&gt;When your component is first initialized, the &lt;code&gt;render&lt;/code&gt; method is called,
generating a lightweight representation of your view. From that representation,
a string of markup is produced, and injected into the document. When your data
changes, the &lt;code&gt;render&lt;/code&gt; method is called again. In order to perform updates as
efficiently as possible, we diff the return value from the previous call to
&lt;code&gt;render&lt;/code&gt; with the new one, and generate a minimal set of changes to be applied
to the DOM.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The data returned from &lt;code&gt;render&lt;/code&gt; is neither a string nor a DOM node -- it&amp;#39;s a
lightweight description of what the DOM should look like.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We call this process &lt;strong&gt;reconciliation&lt;/strong&gt;. Check out
&lt;a href=&quot;http://jsfiddle.net/fv6RD/3/&quot;&gt;this jsFiddle&lt;/a&gt; to see an example of
reconciliation in action.&lt;/p&gt;

&lt;p&gt;Because this re-render is so fast (around 1ms for TodoMVC), the developer
doesn&amp;#39;t need to explicitly specify data bindings. We&amp;#39;ve found this approach
makes it easier to build apps.&lt;/p&gt;

&lt;h2&gt;HTML is just the beginning.&lt;/h2&gt;

&lt;p&gt;Because React has its own lightweight representation of the document, we can do
some pretty cool things with it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Facebook has dynamic charts that render to &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; instead of HTML.&lt;/li&gt;
&lt;li&gt;Instagram is a &amp;quot;single page&amp;quot; web app built entirely with React and
&lt;code&gt;Backbone.Router&lt;/code&gt;. Designers regularly contribute React code with JSX.&lt;/li&gt;
&lt;li&gt;We&amp;#39;ve built internal prototypes that run React apps in a web worker and use
React to drive &lt;strong&gt;native iOS views&lt;/strong&gt; via an Objective-C bridge.&lt;/li&gt;
&lt;li&gt;You can run React
&lt;a href=&quot;http://github.com/petehunt/react-server-rendering&quot;&gt;on the server&lt;/a&gt;
for SEO, performance, code sharing and overall flexibility.&lt;/li&gt;
&lt;li&gt;Events behave in a consistent, standards-compliant way in all browsers
(including IE8) and automatically use
&lt;a href=&quot;http://davidwalsh.name/event-delegate&quot;&gt;event delegation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Head on over to
&lt;a href=&quot;http://facebook.github.io/react&quot;&gt;facebook.github.io/react&lt;/a&gt; to check
out what we have built. Our documentation is geared towards building
apps with the framework, but if you are interested in the
nuts and bolts
&lt;a href=&quot;http://facebook.github.io/react/support.html&quot;&gt;get in touch&lt;/a&gt; with us!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
				<pubDate>2013-06-05T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2013/06/05/why-react.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2013/06/05/why-react.html</guid>
			</item>
		
			<item>
				<title>JSFiddle Integration</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net&quot;&gt;JSFiddle&lt;/a&gt; just announced support for React. This is an exciting news as it makes collaboration on snippets of code a lot easier. You can play around this &lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/vjeux/kb3gN/&quot;&gt;base React JSFiddle&lt;/a&gt;&lt;/strong&gt;, fork it and share it! A &lt;a href=&quot;http://jsfiddle.net/vjeux/VkebS/&quot;&gt;fiddle without JSX&lt;/a&gt; is also available.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot;&gt;&lt;p&gt;React (by Facebook) is now available on JSFiddle. &lt;a href=&quot;http://t.co/wNQf9JPv5u&quot; title=&quot;http://facebook.github.io/react/&quot;&gt;facebook.github.io/react/&lt;/a&gt;&lt;/p&gt;&amp;mdash; JSFiddle (@jsfiddle) &lt;a href=&quot;https://twitter.com/jsfiddle/status/341114115781177344&quot;&gt;June 2, 2013&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
</description>
				<pubDate>2013-06-02T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2013/06/02/jsfiddle-integration.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2013/06/02/jsfiddle-integration.html</guid>
			</item>
		
	</channel>
</rss>
