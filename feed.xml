<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>React</title>
		<description>A JavaScript library for building user interfaces</description>
		<link>http://facebook.github.io/react</link>
		<atom:link href="http://facebook.github.io/react/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>React v0.11 RC</title>
				<description>&lt;p&gt;It&amp;#39;s that time again… we&amp;#39;re just about ready to ship a new React release! v0.11 includes a wide array of bug fixes and features. We highlighted some of the most important changes below, along with the full changelog.&lt;/p&gt;

&lt;p&gt;The release candidate is available for download from the CDN:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-0.11.0-rc1.js&quot;&gt;http://fb.me/react-0.11.0-rc1.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-0.11.0-rc1.min.js&quot;&gt;http://fb.me/react-0.11.0-rc1.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;React with Add-Ons&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-with-addons-0.11.0-rc1.js&quot;&gt;http://fb.me/react-with-addons-0.11.0-rc1.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-with-addons-0.11.0-rc1.min.js&quot;&gt;http://fb.me/react-with-addons-0.11.0-rc1.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In-Browser JSX transformer&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;http://fb.me/JSXTransformer-0.11.0-rc1.js&quot;&gt;http://fb.me/JSXTransformer-0.11.0-rc1.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;ve also published version &lt;code&gt;0.11.0-rc1&lt;/code&gt; of the &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-tools&lt;/code&gt; packages on npm and the &lt;code&gt;react&lt;/code&gt; package on bower.&lt;/p&gt;

&lt;p&gt;Please try these builds out and &lt;a href=&quot;https://github.com/facebook/react/issues/new&quot;&gt;file an issue on GitHub&lt;/a&gt; if you see anything awry.&lt;/p&gt;
&lt;h1&gt;&lt;a class=&quot;anchor&quot; name=&quot;blog-post&quot;&gt;&lt;/a&gt;Blog Post &lt;a class=&quot;hash-link&quot; href=&quot;#blog-post&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;getdefaultprops&quot;&gt;&lt;/a&gt;&lt;code&gt;getDefaultProps&lt;/code&gt; &lt;a class=&quot;hash-link&quot; href=&quot;#getdefaultprops&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Starting in React 0.11, &lt;code&gt;getDefaultProps()&lt;/code&gt; is called only once when &lt;code&gt;React.createClass()&lt;/code&gt; is called, instead of each time a component is rendered. This means that &lt;code&gt;getDefaultProps()&lt;/code&gt; can no longer vary its return value based on &lt;code&gt;this.props&lt;/code&gt; and any objects will be shared across all instances. This change improves performance and will make it possible in the future to do PropTypes checks earlier in the rendering process, allowing us to give better error messages.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;rendering-to-null&quot;&gt;&lt;/a&gt;Rendering to &lt;code&gt;null&lt;/code&gt; &lt;a class=&quot;hash-link&quot; href=&quot;#rendering-to-null&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since React&amp;#39;s release, people have been using work arounds to &amp;quot;render nothing&amp;quot;. Usually this means returning an empty &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span/&amp;gt;&lt;/code&gt;. Some people even got clever and started returning &lt;code&gt;&amp;lt;noscript/&amp;gt;&lt;/code&gt; to avoid extraneous DOM nodes. We finally provided a &amp;quot;blessed&amp;quot; solution that allows developers to writing meaningful code. Returning &lt;code&gt;null&lt;/code&gt; in an explicit indication to React that you do not want anything rendered. Behind the scenes we make this work with a &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; element, though in the future we hope to not put anything in the document. In the mean time, &lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt; elements do not affect layout in any way, so you can feel safe using &lt;code&gt;null&lt;/code&gt; today!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Before&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// After&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;jsx-namespacing&quot;&gt;&lt;/a&gt;JSX Namespacing &lt;a class=&quot;hash-link&quot; href=&quot;#jsx-namespacing&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another feature request we&amp;#39;ve been hearing for a long time is the ability to have namespaces in JSX. Given that JSX is just JavaScript, we didn&amp;#39;t want to use XML namespacing. Instead we opted for a standard JS approach: object property access. Instead of assigning variables to access components stored in an object (such as a component library), you can now use the component directly as &lt;code&gt;&amp;lt;Namespace.Component/&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Before&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;UI&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UILayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UILabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UILayout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UILabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/UILabel&amp;gt;&amp;lt;/UILayout&amp;gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// After&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;UI&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/UI.Label&amp;gt;&amp;lt;/UI.Layout&amp;gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;improved-keyboard-event-normalization&quot;&gt;&lt;/a&gt;Improved keyboard event normalization &lt;a class=&quot;hash-link&quot; href=&quot;#improved-keyboard-event-normalization&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Keyboard events now contain a normalized &lt;code&gt;e.key&lt;/code&gt; value according to the &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Events/#keys-special&quot;&gt;DOM Level 3 Events spec&lt;/a&gt;, allowing you to write simpler key handling code that works in all browsers, such as:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;handleKeyDown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Enter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Handle enter key&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Handle spacebar&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ArrowLeft&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Handle left arrow&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keyboard and mouse events also now include a normalized &lt;code&gt;e.getModifierState()&lt;/code&gt; that works consistently across browsers.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;changelog&quot;&gt;&lt;/a&gt;Changelog &lt;a class=&quot;hash-link&quot; href=&quot;#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-core&quot;&gt;&lt;/a&gt;React Core &lt;a class=&quot;hash-link&quot; href=&quot;#react-core&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;breaking-changes&quot;&gt;&lt;/a&gt;Breaking Changes &lt;a class=&quot;hash-link&quot; href=&quot;#breaking-changes&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getDefaultProps()&lt;/code&gt; is now called once per class and shared across all instances&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;new-features&quot;&gt;&lt;/a&gt;New Features &lt;a class=&quot;hash-link&quot; href=&quot;#new-features&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Rendering to &lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Keyboard events include normalized &lt;code&gt;e.key&lt;/code&gt; and &lt;code&gt;e.getModifierState()&lt;/code&gt; properties&lt;/li&gt;
&lt;li&gt;New normalized &lt;code&gt;onBeforeInput&lt;/code&gt; event&lt;/li&gt;
&lt;li&gt;&lt;code&gt;React.Children.count&lt;/code&gt; has been added as a helper for counting the number of children&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;hash-link&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Re-renders are batched in more cases&lt;/li&gt;
&lt;li&gt;Events: &lt;code&gt;e.view&lt;/code&gt; properly normalized&lt;/li&gt;
&lt;li&gt;Added Support for more HTML attributes (&lt;code&gt;coords&lt;/code&gt;, &lt;code&gt;crossOrigin&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;hrefLang&lt;/code&gt;, &lt;code&gt;mediaGroup&lt;/code&gt;, &lt;code&gt;muted&lt;/code&gt;, &lt;code&gt;scrolling&lt;/code&gt;, &lt;code&gt;shape&lt;/code&gt;, &lt;code&gt;srcSet&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;useMap&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Improved SVG support

&lt;ul&gt;
&lt;li&gt;Changing &lt;code&gt;className&lt;/code&gt; on a mounted SVG component now works correctly&lt;/li&gt;
&lt;li&gt;Added support for elements &lt;code&gt;mask&lt;/code&gt; and &lt;code&gt;tspan&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Added support for attributes &lt;code&gt;dx&lt;/code&gt;, &lt;code&gt;dy&lt;/code&gt;, &lt;code&gt;fillOpacity&lt;/code&gt;, &lt;code&gt;fontFamily&lt;/code&gt;, &lt;code&gt;fontSize&lt;/code&gt;, &lt;code&gt;markerEnd&lt;/code&gt;, &lt;code&gt;markerMid&lt;/code&gt;, &lt;code&gt;markerStart&lt;/code&gt;, &lt;code&gt;opacity&lt;/code&gt;, &lt;code&gt;patternContentUnits&lt;/code&gt;, &lt;code&gt;patternUnits&lt;/code&gt;, &lt;code&gt;preserveAspectRatio&lt;/code&gt;, &lt;code&gt;strokeDasharray&lt;/code&gt;, &lt;code&gt;strokeOpacity&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CSS property names with vendor prefixes (&lt;code&gt;Webkit&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;Moz&lt;/code&gt;, &lt;code&gt;O&lt;/code&gt;) are now handled properly&lt;/li&gt;
&lt;li&gt;Duplicate keys no longer cause a hard error; now a warning is logged (and only one of the children with the same key is shown)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;img&lt;/code&gt; event listeners are now unbound properly, preventing the error &amp;quot;Two valid but unequal nodes with the same &lt;code&gt;data-reactid&lt;/code&gt;&amp;quot;&lt;/li&gt;
&lt;li&gt;Added explicit warning when missing polyfills&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-with-addons&quot;&gt;&lt;/a&gt;React With Addons &lt;a class=&quot;hash-link&quot; href=&quot;#react-with-addons&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PureRenderMixin&lt;/li&gt;
&lt;li&gt;Perf: a new set of tools to help with performance analysis&lt;/li&gt;
&lt;li&gt;Update: New &lt;code&gt;$apply&lt;/code&gt; command to transform values&lt;/li&gt;
&lt;li&gt;TransitionGroup bug fixes with null elements, Android&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-npm-module&quot;&gt;&lt;/a&gt;React NPM Module &lt;a class=&quot;hash-link&quot; href=&quot;#react-npm-module&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Now includes the pre-built packages under &lt;code&gt;dist/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;envify&lt;/code&gt; is properly listed as a dependency instead of a peer dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;jsx&quot;&gt;&lt;/a&gt;JSX &lt;a class=&quot;hash-link&quot; href=&quot;#jsx&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added support for namespaces, eg &lt;code&gt;&amp;lt;Components.Checkbox /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;JSXTransformer

&lt;ul&gt;
&lt;li&gt;Enable the same &lt;code&gt;harmony&lt;/code&gt; features available in the command line with &lt;code&gt;&amp;lt;script type=&amp;quot;text/jsx;harmony=true&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Scripts are downloaded in parallel for more speed. They are still executed in order (as you would expect with normal script tags)&lt;/li&gt;
&lt;li&gt;Fixed a bug preventing sourcemaps from working in Firefox&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-tools-module&quot;&gt;&lt;/a&gt;React Tools Module &lt;a class=&quot;hash-link&quot; href=&quot;#react-tools-module&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Improved readme with usage and API information&lt;/li&gt;
&lt;li&gt;Improved ES6 transforms available with &lt;code&gt;--harmony&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;--source-map-inline&lt;/code&gt; option to the &lt;code&gt;jsx&lt;/code&gt; executable&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;transformWithDetails&lt;/code&gt; API which gives access to the raw sourcemap data&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>2014-07-13T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/07/13/react-v0.11-rc1.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/07/13/react-v0.11-rc1.html</guid>
			</item>
		
			<item>
				<title>Community Round-up #19</title>
				<description>&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-meetups&quot;&gt;&lt;/a&gt;React Meetups! &lt;a class=&quot;hash-link&quot; href=&quot;#react-meetups&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ever wanted to find developers who also share the same interest in React than you? Recently, there has been a React Meetup in &lt;a href=&quot;http://www.meetup.com/ReactJS-San-Francisco/&quot;&gt;San Francisco&lt;/a&gt; (courtesy of &lt;a href=&quot;http://www.telmate.com&quot;&gt;Telmate&lt;/a&gt;), and one in &lt;a href=&quot;http://www.meetup.com/London-React-User-Group/&quot;&gt;London&lt;/a&gt; (courtesy of &lt;a href=&quot;http://www.meetup.com/London-React-User-Group/members/105837542/&quot;&gt;Stuart Harris&lt;/a&gt;, &lt;a href=&quot;http://www.meetup.com/London-React-User-Group/members/15509971/&quot;&gt;Cain Ullah&lt;/a&gt; and &lt;a href=&quot;http://www.meetup.com/London-React-User-Group/members/137058242/&quot;&gt;Zoe Merchant&lt;/a&gt;). These two events have been big successes; a second one in London is &lt;a href=&quot;http://www.meetup.com/London-React-User-Group/events/191406572/&quot;&gt;already planned&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t live near San Francisco or London, why not start one in your community?&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;complementary-tools&quot;&gt;&lt;/a&gt;Complementary Tools &lt;a class=&quot;hash-link&quot; href=&quot;#complementary-tools&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In case you haven&amp;#39;t seen it, we&amp;#39;ve consolidated the tooling solution around React on &lt;a href=&quot;https://github.com/facebook/react/wiki/Complementary-Tools&quot;&gt;this wiki page&lt;/a&gt;. Some of the notable recent entries include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/rpflorence&quot;&gt;Ryan Florence&lt;/a&gt; and &lt;a href=&quot;https://github.com/mjackson&quot;&gt;Michael Jackson&lt;/a&gt;&amp;#39;s &lt;a href=&quot;https://github.com/rpflorence/react-nested-router&quot;&gt;react-nested-router&lt;/a&gt;, which is a translation of the Ember router API to React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/stevoland&quot;&gt;Stephen J. Collings&lt;/a&gt;&amp;#39;s &lt;a href=&quot;https://github.com/react-bootstrap/react-bootstrap&quot;&gt;react-bootstrap&lt;/a&gt;, which wraps the popular framework with a bit of React goodness. The &lt;a href=&quot;http://react-bootstrap.github.io/components.html&quot;&gt;website&lt;/a&gt; features live-editable demos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/andreypopp&quot;&gt;Andrey Popp&lt;/a&gt;&amp;#39;s &lt;a href=&quot;https://github.com/andreypopp/react-quickstart&quot;&gt;react-quickstart&lt;/a&gt;, which gives you a quick template for server-side rendering and routing, among other features.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are some of the links that often pop up on the #reactjs IRC channel. If you made something that you think deserves to be shown on the wiki, feel free to add it!&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-in-interesting-places&quot;&gt;&lt;/a&gt;React in Interesting Places &lt;a class=&quot;hash-link&quot; href=&quot;#react-in-interesting-places&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The core concepts React themselves is something very valuable that the community is exploring and pushing further. A year ago, we wouldn&amp;#39;t have imagined something like &lt;a href=&quot;http://rigsomelight.com&quot;&gt;Bruce Hauman&lt;/a&gt;&amp;#39;s &lt;a href=&quot;http://rigsomelight.com/2014/05/01/interactive-programming-flappy-bird-clojurescript.html&quot;&gt;Flappy Bird ClojureScript port&lt;/a&gt;, whose interactive programming has been made possible through React:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/KZjFVdU8VLI&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;And don&amp;#39;t forget &lt;a href=&quot;https://github.com/petehunt&quot;&gt;Pete Hunt&lt;/a&gt;&amp;#39;s Wolfenstein 3D rendering engine in React (&lt;a href=&quot;https://github.com/petehunt/wolfenstein3D-react/blob/master/js/renderer.js#L183&quot;&gt;source code&lt;/a&gt;). While it&amp;#39;s nearly a year old, it&amp;#39;s still a nice demo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.petehunt.net/wolfenstein3D-react/wolf3d.html&quot;&gt;&lt;img src=&quot;/react/img/blog/wolfenstein_react.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Give us a shoutout on IRC or &lt;a href=&quot;https://groups.google.com/forum/#!forum/reactjs&quot;&gt;React Google Groups&lt;/a&gt; if you&amp;#39;ve used React in some Interesting places.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;even-more-people-using-react&quot;&gt;&lt;/a&gt;Even More People Using React &lt;a class=&quot;hash-link&quot; href=&quot;#even-more-people-using-react&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;prismatic&quot;&gt;&lt;/a&gt;Prismatic &lt;a class=&quot;hash-link&quot; href=&quot;#prismatic&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://getprismatic.com/home&quot;&gt;Prismatic&lt;/a&gt; recently shrank their codebase fivefold with the help of React and its popular ClojureScript wrapper, &lt;a href=&quot;https://github.com/swannodette/om&quot;&gt;Om&lt;/a&gt;. They detailed their very positive experience &lt;a href=&quot;http://blog.getprismatic.com/om-sweet-om-high-functional-frontend-engineering-with-clojurescript-and-react/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Finally, the state is normalized: each piece of information is represented in a single place. Since React ensures consistency between the DOM and the application data, the programmer can focus on ensuring that the state properly stays up to date in response to user input. If the application state is normalized, then this consistency is guaranteed by definition, completely avoiding the possibility of an entire class of common bugs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;adobe-brackets&quot;&gt;&lt;/a&gt;Adobe Brackets &lt;a class=&quot;hash-link&quot; href=&quot;#adobe-brackets&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.kevindangoor.com&quot;&gt;Kevin Dangoor&lt;/a&gt; works on &lt;a href=&quot;http://brackets.io/?lang=en&quot;&gt;Brackets&lt;/a&gt;, the open-source code editor. After writing &lt;a href=&quot;http://www.kevindangoor.com/2014/05/simplifying-code-with-react/&quot;&gt;his first impression on React&lt;/a&gt;, he followed up with another insightful &lt;a href=&quot;http://www.kevindangoor.com/2014/05/react-in-brackets/&quot;&gt;article&lt;/a&gt; on how to gradually make the code transition, how to preserve the editor&amp;#39;s good parts, and how to tune Brackets&amp;#39; tooling around JSX.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We don’t need to switch to React everywhere, all at once. It’s not a framework that imposes anything on the application structure. [...] Easy, iterative adoption is definitely something in React’s favor for us.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;storehouse&quot;&gt;&lt;/a&gt;Storehouse &lt;a class=&quot;hash-link&quot; href=&quot;#storehouse&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.storehouse.co&quot;&gt;Storehouse&lt;/a&gt; (Apple Design Award 2014)&amp;#39;s web presence is build with React. Here&amp;#39;s &lt;a href=&quot;https://www.storehouse.co/stories/y2ad-mexico-city-clouds&quot;&gt;an example story&lt;/a&gt;. Congratulations on the award!&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;vim-awesome&quot;&gt;&lt;/a&gt;Vim Awesome &lt;a class=&quot;hash-link&quot; href=&quot;#vim-awesome&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://vimawesome.com&quot;&gt;Vim Awesome&lt;/a&gt;, an open-source Vim plugins directory built on React, was just launched. Be sure to &lt;a href=&quot;https://github.com/divad12/vim-awesome&quot;&gt;check out the source code&lt;/a&gt; if you&amp;#39;re curious to see an example of how to build a small single-page React app.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;random-tweets&quot;&gt;&lt;/a&gt;Random Tweets &lt;a class=&quot;hash-link&quot; href=&quot;#random-tweets&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Spent 12 hours so far with &lt;a href=&quot;https://twitter.com/hashtag/reactjs?src=hash&quot;&gt;#reactjs&lt;/a&gt;. Spent another 2 wondering why we&amp;#39;ve been doing JS frameworks wrong until now. React makes me happy.&lt;/p&gt;&amp;mdash; Paul Irwin (@paulirwin) &lt;a href=&quot;https://twitter.com/paulirwin/statuses/481263947589242882&quot;&gt;June 24, 2014&lt;/a&gt;&lt;/blockquote&gt;
</description>
				<pubDate>2014-06-27T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/06/27/community-roundup-19.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/06/27/community-roundup-19.html</guid>
			</item>
		
			<item>
				<title>One Year of Open-Source React</title>
				<description>&lt;p&gt;Today marks the one-year open-source anniversary of React.&lt;/p&gt;

&lt;p&gt;It’s been a crazy ride. 2.3k commits and 1.5k issues and pull requests later, we’re approaching version 1.0 and nearing 7k Github stars, with big names such as Khan Academy, New York Times, and Airbnb (and naturally, Facebook and Instagram) using React in production, and many more developers blogging their success stories with it. The &lt;a href=&quot;http://facebook.github.io/react/blog/2014/03/28/the-road-to-1.0.html&quot;&gt;roadmap&lt;/a&gt; gives a glimpse into the future of the library; exciting stuff lies ahead!&lt;/p&gt;

&lt;p&gt;Every success has its story. React was born out of our frustration at existing solutions for building UIs. When it was first suggested at Facebook, few people thought that functionally re-rendering everything and diffing the results could ever perform well. However, support grew after we built the first implementation and people wrote their first components. When we open-sourced React, the initial reception was &lt;a href=&quot;http://www.reddit.com/r/programming/comments/1fak87/react_facebooks_latest_javascript_client_library/&quot;&gt;similarly skeptical&lt;/a&gt;. It challenges many pre-established conventions and received mostly disapproving first-impressions, intermingled with positive ones that often were votes of confidence in Facebook’s engineering capabilities. On an open, competitive platform such as the web, it&amp;#39;s been hard to convince people to try React. &lt;a href=&quot;http://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;, in particular, filtered out a huge chunk of potential early adopters.&lt;/p&gt;

&lt;p&gt;Fast forward one year, React has strongly &lt;a href=&quot;https://news.ycombinator.com/item?id=7489959&quot;&gt;grown in popularity&lt;/a&gt;. Special acknowledgments go to Khan Academy, the ClojureScript community, and established frameworks such as Ember and Angular for contributing to and debating on our work. We&amp;#39;d also like to thank all the &lt;a href=&quot;https://github.com/facebook/react/graphs/contributors&quot;&gt;individual contributors&lt;/a&gt; who have taken the time to help out over the past year. React, as a library and as a new paradigm on the web, wouldn&amp;#39;t have gained as much traction without them. In the future, we will continue to try to set an example of what&amp;#39;s possible to achieve when we rethink about current “best practices”.&lt;/p&gt;

&lt;p&gt;Here’s to another year!&lt;/p&gt;
</description>
				<pubDate>2014-05-29T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/05/29/one-year-of-open-source-react.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/05/29/one-year-of-open-source-react.html</guid>
			</item>
		
			<item>
				<title>Flux: An Application Architecture for React</title>
				<description>&lt;p&gt;We recently spoke at one of f8&amp;#39;s breakout session about Flux, a data flow architecture that works well with React.  Check out the video here:&lt;/p&gt;

&lt;figure&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/nYkdrAPrdcw?list=PLb0IAmt7-GS188xDYE-u1ShQmFFGbrk0v&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/figure&gt;

&lt;p&gt;To summarize, Flux works well for us because the single directional data flow makes it easy to understand and modify an application as it becomes more complicated. We found that two-way data bindings lead to cascading updates, where changing one data model led to another data model updating, making it very difficult to predict what would change as the result of a single user interaction.&lt;/p&gt;

&lt;p&gt;In Flux, the Dispatcher is a singleton that directs the flow of data and ensures that updates do not cascade. As an application grows, the Dispatcher becomes more vital, as it can also manage dependencies between stores by invoking the registered callbacks in a specific order.&lt;/p&gt;

&lt;p&gt;When a user interacts with a React view, the view sends an action (usually represented as a JavaScript object with some fields) through the dispatcher, which notifies the various stores that hold the application&amp;#39;s data and business logic. When the stores change state, they notify the views that something has updated. This works especially well with React&amp;#39;s declarative model, which allows the stores to send updates without specifying how to transition views between states.&lt;/p&gt;

&lt;p&gt;Flux is more of a pattern than a formal framework, so you can start using Flux immediately without a lot of new code. An &lt;a href=&quot;https://github.com/facebook/react/tree/master/examples/todomvc-flux&quot;&gt;example of this architecture&lt;/a&gt; is available, along with more &lt;a href=&quot;http://facebook.github.io/react/docs/flux-overview.html&quot;&gt;detailed documentation&lt;/a&gt; and a &lt;a href=&quot;http://facebook.github.io/react/docs/flux-todo-list.html&quot;&gt;tutorial&lt;/a&gt;. Look for more examples to come in the future.&lt;/p&gt;
</description>
				<pubDate>2014-05-06T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/05/06/flux.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/05/06/flux.html</guid>
			</item>
		
			<item>
				<title>Use React and JSX in ASP.NET MVC</title>
				<description>&lt;p&gt;Today we&amp;#39;re happy to announce the initial release of
&lt;a href=&quot;http://reactjs.net/&quot;&gt;ReactJS.NET&lt;/a&gt;, which makes it easier to use React and JSX
in .NET applications, focusing specifically on ASP.NET MVC web applications.
It has several purposes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On-the-fly JSX to JavaScript compilation. Simply reference JSX files and they
will be compiled and cached server-side.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;@Url.Content(&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Scripts&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jsx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JSX to JavaScript compilation via popular minification/combination libraries
(Cassette and ASP.NET Bundling and Minification). This is suggested for
production websites.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Server-side component rendering to make your initial render super fast.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though we are focusing on ASP.NET MVC, ReactJS.NET can also be used in
Web Forms applications as well as non-web applications (for example, in build
scripts). ReactJS.NET currently only works on Microsoft .NET but we are working
on support for Linux and Mac OS X via Mono as well.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;installation&quot;&gt;&lt;/a&gt;Installation &lt;a class=&quot;hash-link&quot; href=&quot;#installation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ReactJS.NET is packaged in NuGet. Simply run &lt;code&gt;Install-Package React.Mvc4&lt;/code&gt; in the
package manager console or search NuGet for &amp;quot;React&amp;quot; to install it.
&lt;a href=&quot;http://reactjs.net/docs&quot;&gt;See the documentation&lt;/a&gt; for more information. The
GitHub project contains
&lt;a href=&quot;https://github.com/reactjs/React.NET/tree/master/src/React.Sample.Mvc4&quot;&gt;a sample website&lt;/a&gt;
demonstrating all of the features.&lt;/p&gt;

&lt;p&gt;Let us know what you think, and feel free to send through any feedback and
report bugs &lt;a href=&quot;https://github.com/reactjs/React.NET&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>2014-04-04T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/04/04/reactnet.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/04/04/reactnet.html</guid>
			</item>
		
			<item>
				<title>The Road to 1.0</title>
				<description>&lt;p&gt;When we launched React last spring, we purposefully decided not to call it 1.0. It was production ready, but we had plans to evolve APIs and behavior as we saw how people were using React, both internally and externally. We&amp;#39;ve learned a lot over the past 9 months and we&amp;#39;ve thought a lot about what 1.0 will mean for React. A couple weeks ago, I outlined &lt;a href=&quot;https://github.com/facebook/react/wiki/Projects&quot;&gt;several projects&lt;/a&gt; that we have planned to take us to 1.0 and beyond. Today I&amp;#39;m writing a bit more about them to give our users a better insight into our plans.&lt;/p&gt;

&lt;p&gt;Our primary goal with 1.0 is to clarify our messaging and converge on an API that is aligned with our goals. In order to do that, we want to clean up bad patterns we&amp;#39;ve seen in use and really help enable developers write good code.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;descriptors&quot;&gt;&lt;/a&gt;Descriptors &lt;a class=&quot;hash-link&quot; href=&quot;#descriptors&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first part of this is what we&amp;#39;re calling &amp;quot;descriptors&amp;quot;. I talked about this briefly in our &lt;a href=&quot;http://facebook.github.io/react/blog/2014/03/21/react-v0.10.html&quot;&gt;v0.10 announcements&lt;/a&gt;. The goal here is to separate our virtual DOM representation from our use of it. Simply, this means the return value of a component (e.g. &lt;code&gt;React.DOM.div()&lt;/code&gt;, &lt;code&gt;MyComponent()&lt;/code&gt;) will be a simple object containing the information React needs to render. Currently the object returned is actually linked to React&amp;#39;s internal representation of the component and even directly to the DOM element. This has enabled some bad patterns that are quite contrary to how we want people to use React. That&amp;#39;s our failure.&lt;/p&gt;

&lt;p&gt;We added some warnings in v0.9 to start migrating some of these bad patterns. With v0.10 we&amp;#39;ll catch more. You&amp;#39;ll see more on this soon as we expect to ship v0.11 with descriptors.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;api-cleanup&quot;&gt;&lt;/a&gt;API Cleanup &lt;a class=&quot;hash-link&quot; href=&quot;#api-cleanup&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is really connected to everything. We want to keep the API as simple as possible and help developers &lt;a href=&quot;http://blog.codinghorror.com/falling-into-the-pit-of-success/&quot;&gt;fall into the pit of success&lt;/a&gt;. Enabling bad patterns with bad APIs is not success.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;es6&quot;&gt;&lt;/a&gt;ES6 &lt;a class=&quot;hash-link&quot; href=&quot;#es6&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before we even launched React publicly, members of the team were talking about how we could leverage ES6, namely classes, to improve the experience of creating React components. Calling &lt;code&gt;React.createClass(...)&lt;/code&gt; isn&amp;#39;t great. We don&amp;#39;t quite have the right answer here yet, but we&amp;#39;re close. We want to make sure we make this as simple as possible. It could look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are other features of ES6 we&amp;#39;re already using in core. I&amp;#39;m sure we&amp;#39;ll see more of that. The &lt;code&gt;jsx&lt;/code&gt; executable we ship with &lt;code&gt;react-tools&lt;/code&gt; already supports transforming many parts of ES6 into code that will run on older browsers.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;context&quot;&gt;&lt;/a&gt;Context &lt;a class=&quot;hash-link&quot; href=&quot;#context&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;While we haven&amp;#39;t documented &lt;code&gt;context&lt;/code&gt;, it exists in some form in React already. It exists as a way to pass values through a tree without having to use props at every single point. We&amp;#39;ve seen this need crop up time and time again, so we want to make this as easy as possible. It&amp;#39;s use has performance tradeoffs, and there are known weaknesses in our implementation, so we want to make sure this is a solid feature.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;addons&quot;&gt;&lt;/a&gt;Addons &lt;a class=&quot;hash-link&quot; href=&quot;#addons&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As you may know, we ship a separate build of React with some extra features we called &amp;quot;addons&amp;quot;. While this has served us fine, it&amp;#39;s not great for our users. It&amp;#39;s made testing harder, but also results in more cache misses for people using a CDN. The problem we face is that many of these &amp;quot;addons&amp;quot; need access to parts of React that we don&amp;#39;t expose publicly. Our goal is to ship each addon on its own and let each hook into React as needed. This would also allow others to write and distribute &amp;quot;addons&amp;quot;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;browser-support&quot;&gt;&lt;/a&gt;Browser Support &lt;a class=&quot;hash-link&quot; href=&quot;#browser-support&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As much as we&amp;#39;d all like to stop supporting older browsers, it&amp;#39;s not always possible. Facebook still supports IE8. While React won&amp;#39;t support IE8 forever, our goal is to have 1.0 support IE8. Hopefully we can continue to abstract some of these rough parts.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;animations&quot;&gt;&lt;/a&gt;Animations &lt;a class=&quot;hash-link&quot; href=&quot;#animations&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finding a way to define animations in a declarative way is a hard problem. We&amp;#39;ve been exploring the space for a long time. We&amp;#39;ve introduced some half-measures to alleviate some use cases, but the larger problem remains. While we&amp;#39;d like to make this a part of 1.0, realistically we don&amp;#39;t think we&amp;#39;ll have a good solution in place.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;miscellaneous&quot;&gt;&lt;/a&gt;Miscellaneous &lt;a class=&quot;hash-link&quot; href=&quot;#miscellaneous&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are several other things I listed on &lt;a href=&quot;https://github.com/facebook/react/wiki/Projects&quot;&gt;our projects page&lt;/a&gt; that we&amp;#39;re tracking. Some of them are internals and have no obvious outward effect (improve tests, repo separation, updated test runner). I encourage you to take a look.&lt;/p&gt;
</description>
				<pubDate>2014-03-28T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/03/28/the-road-to-1.0.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/03/28/the-road-to-1.0.html</guid>
			</item>
		
			<item>
				<title>React v0.10</title>
				<description>&lt;p&gt;Hot on the heels of the &lt;a href=&quot;/react/blog/2014/03/19/react-v0.10-rc1.html&quot;&gt;release candidate earlier this week&lt;/a&gt;, we&amp;#39;re ready to call v0.10 done. The only major issue we discovered had to do with the &lt;code&gt;react-tools&lt;/code&gt; package, which has been updated. We&amp;#39;ve copied over the changelog from the RC with some small clarifying changes.&lt;/p&gt;

&lt;p&gt;The release is available for download from the CDN:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-0.10.0.js&quot;&gt;http://fb.me/react-0.10.0.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-0.10.0.min.js&quot;&gt;http://fb.me/react-0.10.0.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;React with Add-Ons&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-with-addons-0.10.0.js&quot;&gt;http://fb.me/react-with-addons-0.10.0.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-with-addons-0.10.0.min.js&quot;&gt;http://fb.me/react-with-addons-0.10.0.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In-Browser JSX transformer&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;http://fb.me/JSXTransformer-0.10.0.js&quot;&gt;http://fb.me/JSXTransformer-0.10.0.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;ve also published version &lt;code&gt;0.10.0&lt;/code&gt; of the &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-tools&lt;/code&gt; packages on npm and the &lt;code&gt;react&lt;/code&gt; package on bower.&lt;/p&gt;

&lt;p&gt;Please try these builds out and &lt;a href=&quot;https://github.com/facebook/react/issues/new&quot;&gt;file an issue on GitHub&lt;/a&gt; if you see anything awry.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;clone-on-mount&quot;&gt;&lt;/a&gt;Clone On Mount &lt;a class=&quot;hash-link&quot; href=&quot;#clone-on-mount&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The main purpose of this release is to provide a smooth upgrade path as we evolve some of the implementation of core. In v0.9 we started warning in cases where you called methods on unmounted components. This is part of an effort to enforce the idea that the return value of a component (&lt;code&gt;React.DOM.div()&lt;/code&gt;, &lt;code&gt;MyComponent()&lt;/code&gt;) is in fact not a reference to the component instance React uses in the virtual DOM. The return value is instead a light-weight object that React knows how to use. Since the return value currently is a reference to the same object React uses internally, we need to make this transition in stages as many people have come to depend on this implementation detail.&lt;/p&gt;

&lt;p&gt;In 0.10, we’re adding more warnings to catch a similar set of patterns. When a component is mounted we clone it and use that object for our internal representation. This allows us to capture calls you think you’re making to a mounted component. We’ll forward them on to the right object, but also warn you that this is breaking. See “Access to the Mounted Instance” on &lt;a href=&quot;http://fb.me/react-warning-descriptors&quot;&gt;this page&lt;/a&gt;. Most of the time you can solve your pattern by using refs.&lt;/p&gt;

&lt;p&gt;Storing a reference to your top level component is a pattern touched upon on that page, but another examples that demonstrates what we see a lot of:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// This is a common pattern. However instance here really refers to a&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;quot;descriptor&amp;quot;, not necessarily the mounted instance.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The change here is very simple. The return value of renderComponent will be&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the mounted instance.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These warnings and method forwarding are only enabled in the development build. The production builds continue to work as they did in v0.9. We strongly encourage you to use the development builds to catch these warnings and fix the call sites.&lt;/p&gt;

&lt;p&gt;The plan for v0.11 is that we will go fully to &amp;quot;descriptors&amp;quot;. Method calls on the return value of &lt;code&gt;MyComponent()&lt;/code&gt; will fail hard.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;changelog&quot;&gt;&lt;/a&gt;Changelog &lt;a class=&quot;hash-link&quot; href=&quot;#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-core&quot;&gt;&lt;/a&gt;React Core &lt;a class=&quot;hash-link&quot; href=&quot;#react-core&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;new-features&quot;&gt;&lt;/a&gt;New Features &lt;a class=&quot;hash-link&quot; href=&quot;#new-features&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Added warnings to help migrate towards descriptors&lt;/li&gt;
&lt;li&gt;Made it possible to server render without React-related markup (&lt;code&gt;data-reactid&lt;/code&gt;, &lt;code&gt;data-react-checksum&lt;/code&gt;). This DOM will not be mountable by React. &lt;a href=&quot;/react/docs/top-level-api.html#react.rendercomponenttostaticmarkup&quot;&gt;Read the docs for &lt;code&gt;React.renderComponentToStaticMarkup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added support for more attributes:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;srcSet&lt;/code&gt; for &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; to specify images at different pixel ratios&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textAnchor&lt;/code&gt; for SVG&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;hash-link&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ensure all void elements don’t insert a closing tag into the markup.&lt;/li&gt;
&lt;li&gt;Ensure &lt;code&gt;className={false}&lt;/code&gt; behaves consistently&lt;/li&gt;
&lt;li&gt;Ensure &lt;code&gt;this.refs&lt;/code&gt; is defined, even if no refs are specified.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;addons&quot;&gt;&lt;/a&gt;Addons &lt;a class=&quot;hash-link&quot; href=&quot;#addons&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt; function to deal with immutable data. &lt;a href=&quot;/react/docs/update.html&quot;&gt;Read the docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-tools&quot;&gt;&lt;/a&gt;react-tools &lt;a class=&quot;hash-link&quot; href=&quot;#react-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added an option argument to &lt;code&gt;transform&lt;/code&gt; function. The only option supported is &lt;code&gt;harmony&lt;/code&gt;, which behaves the same as &lt;code&gt;jsx --harmony&lt;/code&gt; on the command line. This uses the ES6 transforms from &lt;a href=&quot;https://github.com/facebook/jstransform&quot;&gt;jstransform&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>2014-03-21T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/03/21/react-v0.10.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/03/21/react-v0.10.html</guid>
			</item>
		
			<item>
				<title>React v0.10 RC</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2014/02/20/react-v0.9.html&quot;&gt;v0.9 has only been out for a month&lt;/a&gt;, but we’re getting ready to push out v0.10 already. Unlike v0.9 which took a long time, we don&amp;#39;t have a long list of changes to talk about.&lt;/p&gt;

&lt;p&gt;The release candidate is available for download from the CDN:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-0.10.0-rc1.js&quot;&gt;http://fb.me/react-0.10.0-rc1.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-0.10.0-rc1.min.js&quot;&gt;http://fb.me/react-0.10.0-rc1.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;React with Add-Ons&lt;/strong&gt;&lt;br&gt;
Dev build with warnings: &lt;a href=&quot;http://fb.me/react-with-addons-0.10.0-rc1.js&quot;&gt;http://fb.me/react-with-addons-0.10.0-rc1.js&lt;/a&gt;&lt;br&gt;
Minified build for production: &lt;a href=&quot;http://fb.me/react-with-addons-0.10.0-rc1.min.js&quot;&gt;http://fb.me/react-with-addons-0.10.0-rc1.min.js&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;In-Browser JSX transformer&lt;/strong&gt;&lt;br&gt;
&lt;a href=&quot;http://fb.me/JSXTransformer-0.10.0-rc1.js&quot;&gt;http://fb.me/JSXTransformer-0.10.0-rc1.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#39;ve also published version &lt;code&gt;0.10.0-rc1&lt;/code&gt; of the &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-tools&lt;/code&gt; packages on npm and the &lt;code&gt;react&lt;/code&gt; package on bower.&lt;/p&gt;

&lt;p&gt;Please try these builds out and &lt;a href=&quot;https://github.com/facebook/react/issues/new&quot;&gt;file an issue on GitHub&lt;/a&gt; if you see anything awry.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;clone-on-mount&quot;&gt;&lt;/a&gt;Clone On Mount &lt;a class=&quot;hash-link&quot; href=&quot;#clone-on-mount&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The main purpose of this release is to provide a smooth upgrade path as we evolve some of the implementation of core. In v0.9 we started warning in cases where you called methods on unmounted components. This is part of an effort to enforce the idea that the return value of a component (&lt;code&gt;React.DOM.div()&lt;/code&gt;, &lt;code&gt;MyComponent()&lt;/code&gt;) is in fact not a reference to the component instance React uses in the virtual DOM. The return value is instead a light-weight object that React knows how to use. Since the return value currently is a reference to the same object React uses internally, we need to make this transition in stages as many people have come to depend on this implementation detail.&lt;/p&gt;

&lt;p&gt;In 0.10, we’re adding more warnings to catch a similar set of patterns. When a component is mounted we clone it and use that object for our internal representation. This allows us to capture calls you think you’re making to a mounted component. We’ll forward them on to the right object, but also warn you that this is breaking. See “Access to the Mounted Instance” on &lt;a href=&quot;http://fb.me/react-warning-descriptors&quot;&gt;this page&lt;/a&gt;. Most of the time you can solve your pattern by using refs.&lt;/p&gt;

&lt;p&gt;Storing a reference to your top level component is a pattern touched upon on that page, but another examples that demonstrates what we see a lot of:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;js language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// This is a common pattern. However instance here really refers to a&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;quot;descriptor&amp;quot;, not necessarily the mounted instance.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The change here is very simple. The return value of renderComponent will be&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the mounted instance.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These warnings and method forwarding are only enabled in the development build. The production builds continue to work as they did in v0.9. We strongly encourage you to use the development builds to catch these warnings and fix the call sites.&lt;/p&gt;

&lt;p&gt;The plan for v0.11 is that we will go fully to &amp;quot;descriptors&amp;quot;. Method calls on the return value of &lt;code&gt;MyComponent()&lt;/code&gt; will fail hard.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;changelog&quot;&gt;&lt;/a&gt;Changelog &lt;a class=&quot;hash-link&quot; href=&quot;#changelog&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-core&quot;&gt;&lt;/a&gt;React Core &lt;a class=&quot;hash-link&quot; href=&quot;#react-core&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;new-features&quot;&gt;&lt;/a&gt;New Features &lt;a class=&quot;hash-link&quot; href=&quot;#new-features&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Added warnings to help migrate towards descriptors&lt;/li&gt;
&lt;li&gt;Made it possible to server render without React-related markup (&lt;code&gt;data-reactid&lt;/code&gt;, &lt;code&gt;data-react-checksum&lt;/code&gt;). This DOM will not be mountable by React. &lt;a href=&quot;/react/docs/top-level-api.html#react.rendercomponenttostaticmarkup&quot;&gt;Read the docs for &lt;code&gt;React.renderComponentToStaticMarkup&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added support for more attributes:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;srcSet&lt;/code&gt; for &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; to specify images at different pixel ratios&lt;/li&gt;
&lt;li&gt;&lt;code&gt;textAnchor&lt;/code&gt; for SVG&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a class=&quot;anchor&quot; name=&quot;bug-fixes&quot;&gt;&lt;/a&gt;Bug Fixes &lt;a class=&quot;hash-link&quot; href=&quot;#bug-fixes&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ensure all void elements don’t insert a closing tag into the markup.&lt;/li&gt;
&lt;li&gt;Ensure &lt;code&gt;className={false}&lt;/code&gt; behaves consistently&lt;/li&gt;
&lt;li&gt;Ensure &lt;code&gt;this.refs&lt;/code&gt; is defined, even if no refs are specified.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;addons&quot;&gt;&lt;/a&gt;Addons &lt;a class=&quot;hash-link&quot; href=&quot;#addons&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt; function to deal with immutable data. &lt;a href=&quot;/react/docs/update.html&quot;&gt;Read the docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-tools&quot;&gt;&lt;/a&gt;react-tools &lt;a class=&quot;hash-link&quot; href=&quot;#react-tools&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added an option argument to &lt;code&gt;transform&lt;/code&gt; function. The only option supported is &lt;code&gt;harmony&lt;/code&gt;, which behaves the same as &lt;code&gt;jsx --harmony&lt;/code&gt; on the command line. This uses the ES6 transforms from &lt;a href=&quot;https://github.com/facebook/jstransform&quot;&gt;jstransform&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>2014-03-19T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/03/19/react-v0.10-rc1.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/03/19/react-v0.10-rc1.html</guid>
			</item>
		
			<item>
				<title>Community Round-up #18</title>
				<description>&lt;p&gt;In this Round-up, we are taking a few closer looks at React&amp;#39;s interplay with different frameworks and architectures.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;little-framework-big-splash&quot;&gt;&lt;/a&gt;&amp;quot;Little framework BIG splash&amp;quot; &lt;a class=&quot;hash-link&quot; href=&quot;#little-framework-big-splash&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s start with yet another refreshing introduction to React: Craig Savolainen (&lt;a href=&quot;https://twitter.com/maedhr&quot;&gt;@maedhr&lt;/a&gt;) walks through some first steps, demonstrating &lt;a href=&quot;http://infinitemonkeys.influitive.com/little-framework-big-splash&quot;&gt;how to build a Google Maps component&lt;/a&gt; using React.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;architecting-your-app-with-react&quot;&gt;&lt;/a&gt;Architecting your app with react &lt;a class=&quot;hash-link&quot; href=&quot;#architecting-your-app-with-react&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Brandon Konkle (&lt;a href=&quot;https://twitter.com/bkonkle&quot;&gt;@bkonkle&lt;/a&gt;)
&lt;a href=&quot;http://lincolnloop.com/blog/architecting-your-app-react-part-1/&quot;&gt;Architecting your app with react&lt;/a&gt;
We&amp;#39;re looking forward to part 2!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React is not a full MVC framework, and this is actually one of its strengths. Many who adopt React choose to do so alongside their favorite MVC framework, like Backbone. React has no opinions about routing or syncing data, so you can easily use your favorite tools to handle those aspects of your frontend application. You&amp;#39;ll often see React used to manage specific parts of an application&amp;#39;s UI and not others. React really shines, however, when you fully embrace its strategies and make it the core of your application&amp;#39;s interface.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://lincolnloop.com/blog/architecting-your-app-react-part-1/&quot;&gt;Read the full article...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-vs.-async-dom-manipulation&quot;&gt;&lt;/a&gt;React vs. async DOM manipulation &lt;a class=&quot;hash-link&quot; href=&quot;#react-vs.-async-dom-manipulation&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Eliseu Monar (&lt;a href=&quot;https://twitter.com/eliseumds&quot;&gt;@eliseumds&lt;/a&gt;)&amp;#39;s post &amp;quot;&lt;a href=&quot;http://eliseumds.tumblr.com/post/77843550010/vitalbox-pchr-reactjs-vs-async-concurrent-rendering&quot;&gt;ReactJS vs async concurrent rendering&lt;/a&gt;&amp;quot; is a great example of how React quite literally renders a whole array of common web development work(arounds) obsolete.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-scala-and-the-play-framework&quot;&gt;&lt;/a&gt;React, Scala and the Play Framework &lt;a class=&quot;hash-link&quot; href=&quot;#react-scala-and-the-play-framework&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://matthiasnehlsen.com/&quot;&gt;Matthias Nehlsen&lt;/a&gt; wrote a detailed introductory piece on &lt;a href=&quot;http://matthiasnehlsen.com/blog/2014/01/05/play-framework-and-facebooks-react-library/&quot;&gt;React and the Play Framework&lt;/a&gt;, including a helpful architectural diagram of a typical React app.&lt;/p&gt;

&lt;p&gt;Nehlsen&amp;#39;s React frontend is the second implementation of his chat application&amp;#39;s frontend, following an AngularJS version. Both implementations are functionally equivalent and offer some perspective on differences between the two frameworks.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;http://matthiasnehlsen.com/blog/2014/01/24/scala-dot-js-and-reactjs/&quot;&gt;another article&lt;/a&gt;, he walks us through the process of using React with scala.js to implement app-wide undo functionality.&lt;/p&gt;

&lt;p&gt;Also check out his &lt;a href=&quot;http://m.ustream.tv/recorded/42780242&quot;&gt;talk&lt;/a&gt; at Ping Conference 2014, in which he walks through a lot of the previously content in great detail.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-and-backbone&quot;&gt;&lt;/a&gt;React and Backbone &lt;a class=&quot;hash-link&quot; href=&quot;#react-and-backbone&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The folks over at &lt;a href=&quot;https://venmo.com/&quot;&gt;Venmo&lt;/a&gt; are using React in conjunction with Backbone.
Thomas Boyt (&lt;a href=&quot;https://twitter.com/thomasaboyt&quot;&gt;@thomasaboyt&lt;/a&gt;) wrote &lt;a href=&quot;http://www.thomasboyt.com/2013/12/17/using-reactjs-as-a-backbone-view.html&quot;&gt;this detailed piece&lt;/a&gt; about why React and Backbone are &amp;quot;a fantastic pairing&amp;quot;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-vs.-ember&quot;&gt;&lt;/a&gt;React vs. Ember &lt;a class=&quot;hash-link&quot; href=&quot;#react-vs.-ember&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Eric Berry (&lt;a href=&quot;https://twitter.com/coderberry&quot;&gt;@coderberry&lt;/a&gt;) developed Ember equivalents for some of the official React examples. Read his post for a side-by-side comparison of the respective implementations: &lt;a href=&quot;http://instructure.github.io/blog/2013/12/17/facebook-react-vs-ember/&quot;&gt;&amp;quot;Facebook React vs. Ember&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-and-plain-old-html&quot;&gt;&lt;/a&gt;React and plain old HTML &lt;a class=&quot;hash-link&quot; href=&quot;#react-and-plain-old-html&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Daniel Lo Nigro (&lt;a href=&quot;https://twitter.com/Daniel15&quot;&gt;@Daniel15&lt;/a&gt;) created &lt;a href=&quot;https://github.com/reactjs/react-magic&quot;&gt;React-Magic&lt;/a&gt;, which leverages React to ajaxify plain old html pages and even &lt;a href=&quot;http://stuff.dan.cx/facebook/react-hacks/magic/red.php&quot;&gt;allows CSS transitions between pageloads&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;React-Magic intercepts all navigation (link clicks and form posts) and loads the requested page via an AJAX request. React is then used to &amp;quot;diff&amp;quot; the old HTML with the new HTML, and only update the parts of the DOM that have been changed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/react-magic&quot;&gt;Check out the project on GitHub...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On a related note, &lt;a href=&quot;https://turbo-react.herokuapp.com/&quot;&gt;Reactize&lt;/a&gt; by Ross Allen (&lt;a href=&quot;https://twitter.com/ssorallen&quot;&gt;@ssorallen&lt;/a&gt;) is a similarly awesome project: A wrapper for Rails&amp;#39; &lt;a href=&quot;https://github.com/rails/turbolinks/&quot;&gt;Turbolinks&lt;/a&gt;, which seems to have inspired John Lynch (&lt;a href=&quot;https://twitter.com/johnrlynch&quot;&gt;@johnrlynch&lt;/a&gt;) to then create &lt;a href=&quot;http://www.rigelgroupllc.com/blog/2014/01/12/react-jsx-transformer-in-rails-middleware/&quot;&gt;a server-rendered version using the JSX transformer in Rails middleware&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-and-object.observe&quot;&gt;&lt;/a&gt;React and Object.observe &lt;a class=&quot;hash-link&quot; href=&quot;#react-and-object.observe&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/fdecampredon&quot;&gt;François de Campredon&lt;/a&gt;&amp;#39;s implementation of &lt;a href=&quot;https://github.com/fdecampredon/react-observe-todomvc/&quot;&gt;TodoMVC based on React and ES6&amp;#39;s Object.observe&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-and-angular&quot;&gt;&lt;/a&gt;React and Angular &lt;a class=&quot;hash-link&quot; href=&quot;#react-and-angular&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ian Bicking (&lt;a href=&quot;https://twitter.com/ianbicking&quot;&gt;@ianbicking&lt;/a&gt;) of Mozilla Labs &lt;a href=&quot;https://plus.google.com/+IanBicking/posts/Qj8R5SWAsfE&quot;&gt;explains why he &amp;quot;decided to go with React instead of Angular.js&amp;quot;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;ng-react-update&quot;&gt;&lt;/a&gt;ng-React Update &lt;a class=&quot;hash-link&quot; href=&quot;#ng-react-update&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/davidchang&quot;&gt;David Chang&lt;/a&gt; works through some performance improvements of his &lt;a href=&quot;https://github.com/davidchang/ngReact&quot;&gt;ngReact&lt;/a&gt; project. His post &lt;a href=&quot;http://davidandsuzi.com/ngreact-update/&quot;&gt;&amp;quot;ng-React Update - React 0.9 and Angular Track By&amp;quot;&lt;/a&gt; includes some helpful advice on boosting render performance for Angular components.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Angular gives you a ton of functionality out of the box - a full MV* framework - and I am a big fan, but I&amp;#39;ll admit that you need to know how to twist the right knobs to get performance.&lt;/p&gt;

&lt;p&gt;That said, React gives you a very strong view component out of the box with the performance baked right in. Try as I did, I couldn&amp;#39;t actually get it any faster. So pretty impressive stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://davidandsuzi.com/ngreact-update/&quot;&gt;Read the full post...&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;React was also recently mentioned at ng-conf, where the Angular team commented on React&amp;#39;s concept of the virtual DOM:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/srt3OBP2kGc?start=113&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-and-web-components&quot;&gt;&lt;/a&gt;React and Web Components &lt;a class=&quot;hash-link&quot; href=&quot;#react-and-web-components&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jonathan Krause (&lt;a href=&quot;https://twitter.com/jonykrause&quot;&gt;@jonykrause&lt;/a&gt;) offers his thoughts regarding &lt;a href=&quot;http://jonykrau.se/posts/the-value-of-react&quot;&gt;parallels between React and Web Components&lt;/a&gt;, highlighting the value of React&amp;#39;s ability to render pages on the server practically for free.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;immutable-react&quot;&gt;&lt;/a&gt;Immutable React &lt;a class=&quot;hash-link&quot; href=&quot;#immutable-react&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://pk11.kinja.com/&quot;&gt;Peter Hausel&lt;/a&gt; shows how to build a Wikipedia auto-complete demo based on immutable data structures (similar to &lt;a href=&quot;https://npmjs.org/package/mori&quot;&gt;mori&lt;/a&gt;), really taking advantage of the framework&amp;#39;s one-way reactive data binding:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Its truly reactive design makes DOM updates finally sane and when combined with persistent data structures one can experience JavaScript development like it was never done before.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.kinja.com/immutable-react-1495205675&quot;&gt;Read the full post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;d3-and-react&quot;&gt;&lt;/a&gt;D3 and React &lt;a class=&quot;hash-link&quot; href=&quot;#d3-and-react&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://10consulting.com/&quot;&gt;Ben Smith&lt;/a&gt; built some great SVG-based charting components using a little less of D3 and a little more of React: &lt;a href=&quot;http://10consulting.com/2014/02/19/d3-plus-reactjs-for-charting/&quot;&gt;D3 and React - the future of charting components?&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;om-and-react&quot;&gt;&lt;/a&gt;Om and React &lt;a class=&quot;hash-link&quot; href=&quot;#om-and-react&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Josh Haberman (&lt;a href=&quot;https://twitter.com/JoshHaberman&quot;&gt;@joshhaberman&lt;/a&gt;) discusses performance differences between React, Om and traditional MVC frameworks in &amp;quot;&lt;a href=&quot;http://blog.reverberate.org/2014/02/on-future-of-javascript-mvc-frameworks.html&quot;&gt;A closer look at OM vs React performance&lt;/a&gt;&amp;quot;.&lt;/p&gt;

&lt;p&gt;Speaking of Om: &lt;a href=&quot;https://github.com/sgrove/omchaya&quot;&gt;Omchaya&lt;/a&gt; by Sean Grove (&lt;a href=&quot;https://twitter.com/sgrove&quot;&gt;@sgrove&lt;/a&gt;) is a neat Cljs/Om example project.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;random-tweets&quot;&gt;&lt;/a&gt;Random Tweets &lt;a class=&quot;hash-link&quot; href=&quot;#random-tweets&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Worked for 2 hours on a [@react_js](https://twitter.com/react_js) app sans internet. Love that I could get stuff done with it without googling every question.&lt;/p&gt;&amp;mdash; John Shimek (@varikin) &lt;a href=&quot;https://twitter.com/varikin/status/436606891657949185&quot;&gt;February 20, 2014&lt;/a&gt;&lt;/blockquote&gt;&lt;/div&gt;
</description>
				<pubDate>2014-03-14T00:00:00-07:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/03/14/community-roundup-18.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/03/14/community-roundup-18.html</guid>
			</item>
		
			<item>
				<title>Community Round-up #17</title>
				<description>&lt;p&gt;It&amp;#39;s exciting to see the number of real-world React applications and components skyrocket over the past months! This community round-up features a few examples of inspiring React applications and components.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-in-the-real-world&quot;&gt;&lt;/a&gt;React in the Real World &lt;a class=&quot;hash-link&quot; href=&quot;#react-in-the-real-world&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;facebook-lookback-video-editor&quot;&gt;&lt;/a&gt;Facebook Lookback video editor &lt;a class=&quot;hash-link&quot; href=&quot;#facebook-lookback-video-editor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Large parts of Facebook&amp;#39;s web frontend are already powered by React. The recently released Facebook &lt;a href=&quot;https://www.facebook.com/lookback/edit/&quot;&gt;Lookback video and its corresponding editor&lt;/a&gt; are great examples of a complex, real-world React app.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;russias-largest-bank-is-now-powered-by-react&quot;&gt;&lt;/a&gt;Russia&amp;#39;s largest bank is now powered by React &lt;a class=&quot;hash-link&quot; href=&quot;#russias-largest-bank-is-now-powered-by-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sberbank, Russia&amp;#39;s largest bank, recently switched large parts of their site to use React, as detailed in &lt;a href=&quot;https://groups.google.com/forum/#!topic/reactjs/Kj6WATX0atg&quot;&gt;this post by Vyacheslav Slinko&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;relato&quot;&gt;&lt;/a&gt;Relato &lt;a class=&quot;hash-link&quot; href=&quot;#relato&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://bripkens.github.io/relato/&quot;&gt;Relato&lt;/a&gt; by &lt;a href=&quot;https://github.com/bripkens&quot;&gt;Ben Ripkens&lt;/a&gt; shows Open Source Statistics based on npm data. It features a filterable and sortable table built in React. Check it out &amp;ndash; it&amp;#39;s super fast!&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;makona-editor&quot;&gt;&lt;/a&gt;Makona Editor &lt;a class=&quot;hash-link&quot; href=&quot;#makona-editor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;John Lynch (&lt;a href=&quot;https://twitter.com/johnrlynch&quot;&gt;@johnrlynch&lt;/a&gt;) created Makona, a block-style document editor for the web. Blocks of different content types comprise documents, authored using plain markup. At the switch of a toggle, block contents are then rendered on the page. While not quite a WYSIWYG editor, Makona uses plain textareas for input. This makes it compatible with a wider range of platforms than traditional rich text editors.
&lt;figure&gt;&lt;a href=&quot;http://johnthethird.github.io/makona-editor/&quot;&gt;&lt;img src=&quot;/react/img/blog/makona-editor.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;create-chrome-extensions-using-react&quot;&gt;&lt;/a&gt;Create Chrome extensions using React &lt;a class=&quot;hash-link&quot; href=&quot;#create-chrome-extensions-using-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React is in no way limited to just web pages. Brandon Tilley (&lt;a href=&quot;https://twitter.com/BinaryMuse&quot;&gt;@BinaryMuse&lt;/a&gt;) just released a detailed walk-through of &lt;a href=&quot;http://brandontilley.com/2014/02/24/creating-chrome-extensions-with-react.html&quot;&gt;how he built his Chrome extension &amp;quot;Fast Tab Switcher&amp;quot; using React&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;twitter-streaming-client&quot;&gt;&lt;/a&gt;Twitter Streaming Client &lt;a class=&quot;hash-link&quot; href=&quot;#twitter-streaming-client&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Javier Aguirre (&lt;a href=&quot;https://twitter.com/javaguirre&quot;&gt;@javaguirre&lt;/a&gt;) put together a simple &lt;a href=&quot;http://javaguirre.net/2014/02/11/twitter-streaming-api-with-node-socket-io-and-reactjs/&quot;&gt;twitter streaming client using node, socket.io and React&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;sproutsheet&quot;&gt;&lt;/a&gt;Sproutsheet &lt;a class=&quot;hash-link&quot; href=&quot;#sproutsheet&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://sproutsheet.com/&quot;&gt;Sproutsheet&lt;/a&gt; is a gardening calendar. You can use it to track certain events that happen in the life of your plants. It&amp;#39;s currently in beta and supports localStorage, and data/image import and export.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;instant-domain-search&quot;&gt;&lt;/a&gt;Instant Domain Search &lt;a class=&quot;hash-link&quot; href=&quot;#instant-domain-search&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://instantdomainsearch.com/&quot;&gt;Instant Domain Search&lt;/a&gt; also uses React. It sure is instant!&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;svg-based-graphical-node-editor&quot;&gt;&lt;/a&gt;SVG-based graphical node editor &lt;a class=&quot;hash-link&quot; href=&quot;#svg-based-graphical-node-editor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://noflojs.org/&quot;&gt;NoFlo&lt;/a&gt; and &lt;a href=&quot;http://meemoo.org/&quot;&gt;Meemoo&lt;/a&gt; developer &lt;a href=&quot;http://www.forresto.com/&quot;&gt;Forresto Oliphant&lt;/a&gt; built an awesome SVG-based &lt;a href=&quot;http://forresto.github.io/prototyping/react/&quot;&gt;node editor&lt;/a&gt; in React.
 &lt;figure&gt;&lt;a href=&quot;http://forresto.github.io/prototyping/react/&quot;&gt;&lt;img src=&quot;/react/img/blog/react-svg-fbp.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;ultimate-tic-tac-toe-game-in-react&quot;&gt;&lt;/a&gt;Ultimate Tic-Tac-Toe Game in React &lt;a class=&quot;hash-link&quot; href=&quot;#ultimate-tic-tac-toe-game-in-react&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rafał Cieślak (&lt;a href=&quot;https://twitter.com/Ravicious&quot;&gt;@Ravicious&lt;/a&gt;) wrote a &lt;a href=&quot;http://ravicious.github.io/ultimate-ttt/&quot;&gt;React version&lt;/a&gt; of &lt;a href=&quot;http://mathwithbaddrawings.com/2013/06/16/ultimate-tic-tac-toe/&quot;&gt;Ultimate Tic Tac Toe&lt;/a&gt;. Find the source &lt;a href=&quot;https://github.com/ravicious/ultimate-ttt&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;reactjs-gallery&quot;&gt;&lt;/a&gt;ReactJS Gallery &lt;a class=&quot;hash-link&quot; href=&quot;#reactjs-gallery&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lele85&quot;&gt;Emanuele Rampichini&lt;/a&gt;&amp;#39;s &lt;a href=&quot;https://github.com/lele85/ReactGallery&quot;&gt;ReactJS Gallery&lt;/a&gt; is a cool demo app that shows fullscreen images from a folder on the server. If the folder content changes, the gallery app updates via websockets.&lt;/p&gt;

&lt;p&gt;Emanuele shared this awesome demo video with us:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/jYcpaemt90M&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-components&quot;&gt;&lt;/a&gt;React Components &lt;a class=&quot;hash-link&quot; href=&quot;#react-components&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;table-sorter&quot;&gt;&lt;/a&gt;Table Sorter &lt;a class=&quot;hash-link&quot; href=&quot;#table-sorter&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://bgerm.github.io/react-table-sorter-demo/&quot;&gt;Table Sorter&lt;/a&gt; by &lt;a href=&quot;https://github.com/bgerm&quot;&gt;bgerm&lt;/a&gt; [&lt;a href=&quot;https://github.com/bgerm/react-table-sorter-demo&quot;&gt;source&lt;/a&gt;] is another helpful React component.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;static-search&quot;&gt;&lt;/a&gt;Static-search &lt;a class=&quot;hash-link&quot; href=&quot;#static-search&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dmitry Chestnykh &lt;a href=&quot;https://twitter.com/dchest&quot;&gt;@dchest&lt;/a&gt; wrote a &lt;a href=&quot;https://github.com/dchest/static-search&quot;&gt;static search indexer&lt;/a&gt; in Go, along with a &lt;a href=&quot;http://www.codingrobots.com/search/&quot;&gt;React-based web front-end&lt;/a&gt; that consumes search result via JSON.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;lorem-ipsum-component&quot;&gt;&lt;/a&gt;Lorem Ipsum component &lt;a class=&quot;hash-link&quot; href=&quot;#lorem-ipsum-component&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/martinandert&quot;&gt;Martin Andert&lt;/a&gt; created &lt;a href=&quot;https://github.com/martinandert/react-lorem-component&quot;&gt;react-lorem-component&lt;/a&gt;, a simple component for all your placeholding needs.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;input-with-placeholder-shim&quot;&gt;&lt;/a&gt;Input with placeholder shim &lt;a class=&quot;hash-link&quot; href=&quot;#input-with-placeholder-shim&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/enigma-io/react-input-placeholder&quot;&gt;react-input=placeholder&lt;/a&gt; by &lt;a href=&quot;https://github.com/enigma-io&quot;&gt;enigma-io&lt;/a&gt; is a small wrapper around React.DOM.input that shims in placeholder functionality for browsers that don&amp;#39;t natively support it.&lt;/p&gt;
&lt;h3&gt;&lt;a class=&quot;anchor&quot; name=&quot;dicontainer&quot;&gt;&lt;/a&gt;diContainer &lt;a class=&quot;hash-link&quot; href=&quot;#dicontainer&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/SpektrumFM/dicontainer&quot;&gt;dicontainer&lt;/a&gt; provides a dependency container that lets you inject Angular-style providers and services as simple React.js Mixins.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;react-server-rendering&quot;&gt;&lt;/a&gt;React server rendering &lt;a class=&quot;hash-link&quot; href=&quot;#react-server-rendering&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ever wonder how to pre-render React components on the server? &lt;a href=&quot;https://github.com/mhart/react-server-example&quot;&gt;react-server-example&lt;/a&gt; by Michael Hart (&lt;a href=&quot;http://twitter.com/hichaelmart&quot;&gt;@hichaelmart&lt;/a&gt;) walks through the necessary steps.&lt;/p&gt;

&lt;p&gt;Similarly, Alan deLevie (&lt;a href=&quot;https://twitter.com/adelevie&quot;&gt;@adelevie&lt;/a&gt;) created &lt;a href=&quot;https://github.com/adelevie/react-client-server-starter&quot;&gt;react-client-server-starter&lt;/a&gt;, another detailed walk-through of how to server-render your app.&lt;/p&gt;
&lt;h2&gt;&lt;a class=&quot;anchor&quot; name=&quot;random-tweet&quot;&gt;&lt;/a&gt;Random Tweet &lt;a class=&quot;hash-link&quot; href=&quot;#random-tweet&quot;&gt;#&lt;/a&gt;&lt;/h2&gt;
&lt;div&gt;&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Recent changes: web ui is being upgraded to [#reactjs](https://twitter.com/search?q=%23reactjs&amp;src=hash), HEAD~4 at [https://camlistore.googlesource.com/camlistore/](https://camlistore.googlesource.com/camlistore/)&lt;/p&gt;&amp;mdash; Camlistore (@Camlistore) &lt;a href=&quot;https://twitter.com/Camlistore/status/423925795820539904&quot;&gt;January 16, 2014&lt;/a&gt;&lt;/blockquote&gt;&lt;/div&gt;
</description>
				<pubDate>2014-02-24T00:00:00-08:00</pubDate>
				<link>http://facebook.github.io/react/blog/2014/02/24/community-roundup-17.html</link>
				<guid isPermaLink="true">http://facebook.github.io/react/blog/2014/02/24/community-roundup-17.html</guid>
			</item>
		
	</channel>
</rss>
